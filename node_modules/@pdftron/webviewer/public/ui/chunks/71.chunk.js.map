{"version":3,"sources":["webpack:///./src/ui/src/components/SignatureListPanel/SignatureListPanel.scss?93e8","webpack:///./src/ui/src/components/SignatureListPanel/SignatureListPanel.scss","webpack:///./src/ui/src/components/SignatureListPanel/SavedSignatures.js","webpack:///./src/ui/src/components/SignatureListPanel/SignatureAddButton.js","webpack:///./src/ui/src/components/SignatureListPanel/SignatureListPanel.js","webpack:///./src/ui/src/components/SignatureListPanel/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","SignatureRowContent","React","memo","index","onFullSignatureSetHandler","onInitialsSetHandler","isActive","altText","fullSignature","initials","isHoveredForDeletion","signatureMode","creatSignatureButton","handler","imgSrc","signatureType","className","classNames","SignatureModes","FULL_SIGNATURE","onClick","alt","src","INITIALS","displayName","SavedSignatures","props","renderInitialsHeader","savedSignatures","deleteHandler","currentlySelectedSignature","isDeleteDisabled","panelSize","t","useTranslation","useState","hoveredIndexToDelete","setHoveredIndexToDelete","isMobile","isMobileSize","some","map","signatureObject","savedSignatureIndex","isPanelSizeLarge","PANEL_SIZES","SMALL_SIZE","isMobileSizeWithSmallPanel","key","data-element","onMouseOver","onMouseLeave","Icon","glyph","propTypes","PropTypes","oneOf","Object","values","SignatureAddButton","isDisabled","dispatch","useDispatch","buttonLabel","useSelector","state","selectors","getIsInitialsModeEnabled","Button","disabled","label","actions","setSignatureMode","openElement","DataElements","SIGNATURE_MODAL","SignatureListPanel","getSavedSignatures","getMaxSignaturesCount","getDisplayedSignaturesFilterFunction","isElementDisabled","getSavedInitials","getSelectedDisplayedSignatureIndex","getSignatureMode","getMobilePanelSize","shallowEqual","maxSignaturesCount","displayedSignaturesFilterFunction","isSignatureDeleteButtonDisabled","savedInitials","selectedSignatureIndex","mobilePanelSize","store","useStore","TOOL_NAME","signatureToolArray","core","getToolsFromAllDocumentViewers","useEffect","signatureTool","clearLocation","setSignature","setInitials","savedSignaturesAndInitials","setSavedSignaturesAndInitials","mergedSignaturesAndInitals","filter","signature","setMobilePanelSize","onVisibilityChanged","e","activeTool","getToolMode","activeToolName","name","detail","element","isVisible","panelNames","SIGNATURE_LIST","defaultTool","setToolModeAndGroup","addEventListener","Events","VISIBILITY_CHANGED","removeEventListener","useCallback","annotation","setSelectedDisplayedSignatureIndex","setToolMode","hasLocation","addSignature","showPreview","addInitials","showInitialsPreview","deleteSignatureAndInitials","deleteSavedInitials","deleteSavedSignature","remainingSignatures","isDeletingSelectedSignature","hidePreview","newIndex","Math","max","DataElementWrapper","dataElement","SIGNATURE_LIST_PANEL","Divider"],"mappings":"+EAAA,IAAIA,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,SAAUC,GAgBX,IAAKC,OAAOC,8BAEV,YADAC,SAASC,KAAKC,YAAYL,GAI5B,IAAIM,EAEJA,EAAgBH,SAASI,qBAAqB,oBAEzCD,EAAcE,SACjBF,EAzBF,SAASG,EAAwBC,EAASC,EAAOR,UAC/C,MAAMS,EAAW,GAYjB,OATAD,EAAKE,iBAAiBH,GAASI,QAAQC,GAAMH,EAASI,KAAKD,IAG3DJ,EAAKE,iBAAiB,KAAKC,QAAQC,IAC7BA,EAAGE,YACLL,EAASI,QAAQP,EAAwBC,EAASK,EAAGE,eAIlDL,EAYSH,CAAwB,qBAG1C,MAAMS,EAAkB,GACxB,IAAK,IAAIpB,EAAI,EAAGA,EAAIQ,EAAcE,OAAQV,IAAK,CAC7C,MAAMqB,EAAeb,EAAcR,GACnC,GAAU,IAANA,EACFqB,EAAaF,WAAWZ,YAAYL,GACpCA,EAASoB,OAAS,WACZF,EAAgBV,OAAS,GAC3BU,EAAgBJ,QAASO,IAEvBA,EAAUC,UAAYtB,EAASsB,iBAIhC,CACL,MAAMD,EAAYrB,EAASuB,WAAU,GACrCJ,EAAaF,WAAWZ,YAAYgB,GACpCH,EAAgBF,KAAKK,MAIzC,WAAoB,GAEP5B,EAAIC,EAASK,GAI1BF,EAAO2B,QAAU9B,EAAQ+B,QAAU,I,sBClEnCD,EAAU3B,EAAO2B,QAAU,EAAQ,GAAR,EAAkE,IAKrFR,KAAK,CAACnB,EAAOC,EAAI,k3MAAm3M,KAG54M0B,EAAQC,OAAS,CAChB,kBAAqB,OACrB,mBAAsB,S,+6CCDvB,IAAMC,EAAsBC,IAAMC,MAAK,YAUjC,IATJC,EAAK,EAALA,MACAC,EAAyB,EAAzBA,0BACAC,EAAoB,EAApBA,qBACAC,EAAQ,EAARA,SACAC,EAAO,EAAPA,QACAC,EAAa,EAAbA,cACAC,EAAQ,EAARA,SACAC,EAAoB,EAApBA,qBACAC,EAAa,EAAbA,cAEMC,EAAuB,SAACC,EAASC,EAAQC,GAAa,OAC1D,4BACEC,UAAWC,IAAW,wBAAyB,CAC7C,aAAgBJ,EAChB,OAAUP,GAAYS,IAAkBJ,EACxC,kBAAmBD,GAClB,GAAF,OAAKK,IAAkBG,IAAeC,eAAiB,iBAAmB,aAC3EC,QAAS,kBAAMP,EAAQV,KAEvB,yBAAKkB,IAAKd,EAASe,IAAKR,MAI5B,OACE,yBAAKE,UAAU,2BACZJ,EAAqBR,EAA2BI,aAAa,EAAbA,EAAeM,OAAQI,IAAeC,gBACtFV,GAAYG,EAAqBP,EAAsBI,EAASK,OAAQI,IAAeK,cAK9FvB,EAAoBwB,YAAc,sBAGlC,IAAMC,EAAkB,SAACC,GACvB,IAeQC,EAdNC,EAQEF,EARFE,gBACAxB,EAOEsB,EAPFtB,0BACAC,EAMEqB,EANFrB,qBACAwB,EAKEH,EALFG,cACAC,EAIEJ,EAJFI,2BACAC,EAGEL,EAHFK,iBACApB,EAEEe,EAFFf,cACAqB,EACEN,EADFM,UAGMC,EAAMC,cAAND,EACoE,IAApBhC,IAAMkC,SAAS,MAAK,GAArEC,EAAoB,KAAEC,EAAuB,KAa9CC,EAAWC,cAEjB,OAAIX,EAAgB9C,OAAS,EACnB,yBAAKkC,UAAU,mBAbjBW,EAAuBC,EAAgBY,MAAK,YAAW,SAAR/B,YAEnD,yBAAKO,UAAU,yBACb,yBAAKA,UAAU,mBAAmBiB,EAAE,+CACnCN,GAAwB,yBAAKX,UAAU,kBAAkBiB,EAAE,8CAC5D,yBAAKjB,UAAU,oBAWfY,EAEGa,KAAI,SAACC,EAAiBvC,GAAK,MAAK,CAACuC,EAAiBvC,MAClDsC,KAAI,YAAwD,oBAApDjC,EAAa,EAAbA,cAAeC,EAAQ,EAARA,SAAYkC,EAAmB,KAC/CC,GAAoBZ,GAAaA,IAAca,IAAYC,WAC3DC,EAA6BT,GAAYN,IAAca,IAAYC,WACzE,OAAIF,GAAqBG,GAA8BjB,IAA+Ba,EAC5E,yBACNK,IAAKL,EACL3B,UAAU,iBAEV,kBAAChB,EAAmB,CAClBG,MAAOwC,EACPnC,cAAeA,EACfC,SAAUA,EACVL,0BAA2BA,EAC3BC,qBAAsBA,EACtBC,SAAUwB,IAA+Ba,EACzCpC,QAAO,UAAK0B,EAAE,wCAAuC,YAAIU,EAAsB,GAC/EjC,qBAAsB0B,IAAyBO,EAC/ChC,cAAeA,KAEfoB,GACA,4BACEf,UAAU,cACViC,eAAa,+BACbC,YAAa,kBAAMb,EAAwBM,IAC3CQ,aAAc,kBAAMd,EAAwB,OAC5CjB,QAAS,WACPS,EAAcc,GACdN,EAAwB,QAG1B,kBAACe,EAAA,EAAI,CAACC,MAAM,uBAKb,SAKV,MAGT5B,EAAgBD,YAAc,kBAC9BC,EAAgB6B,UAAY,CAC1BtB,UAAWuB,IAAUC,MAAMC,OAAOC,OAAOb,OAG5B5C,UAAMC,KAAKuB,G,uiCCrH1B,IAAMkC,EAAqB,SAAH,GAAuB,IAAjBC,EAAU,EAAVA,WACtBC,EAAWC,cACV7B,EAAqB,EAAhBC,cAAgB,GAApB,GAUF6B,EADwBC,aAAY,SAACC,GAAK,OAAKC,IAAUC,yBAAyBF,MAC5C,4CAA8C,kCAE1F,OACE,kBAACG,EAAA,EAAM,CACLpD,UAAWC,IACT,qBACA,CAAEoD,SAAUT,IAEdU,MAAOrC,EAAE8B,GACT3C,QAjBuB,WACpBwC,IACHC,EAASU,IAAQC,iBAAiBtD,IAAeC,iBACjD0C,EAASU,IAAQE,YAAYC,IAAaC,uBAkBjC1E,MAAMC,KAAKyD,G,o1BClC1B,8lGAAAvF,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4uBAAAA,EAAA,gDAAAA,GAAA,oCAAAA,OAAA,qYAAAA,GAAA,gEAAAA,GAAA,0JAAAA,EAAA,6FAAAA,GAAA,mIAAAA,IAAA,IAAAA,IAAA,ygBAAAA,EAAA,iBAAAA,EAAA,EAAAA,IAAA,EAAAA,GAAA,EAAAA,GAAA,SAoBA,IAAMwG,EAAqB,SAAH,GAAsB,IAAhB5C,EAAS,EAATA,UACrBC,EAAqB,EAAhBC,cAAgB,GAApB,GACFI,EAAWC,cAuBhB,IAZGyB,aACF,SAACC,GAAK,MAAK,CACTC,IAAUW,mBAAmBZ,GAC7BC,IAAUY,sBAAsBb,GAChCC,IAAUa,qCAAqCd,GAC/CC,IAAUc,kBAAkBf,EAAO,gCACnCC,IAAUe,iBAAiBhB,GAC3BC,IAAUgB,mCAAmCjB,GAC7CC,IAAUiB,iBAAiBlB,GAC3BC,IAAUkB,mBAAmBnB,MAE/BoB,KACD,GApBCzD,EAAe,KACf0D,EAAkB,KAClBC,EAAiC,KACjCC,EAA+B,KAC/BC,EAAa,KACbC,EAAsB,KACtB/E,EAAa,KACbgF,EAAe,KAcXC,EAAQC,cACRC,EAAY,4BACZC,EAAqBC,IAAKC,+BAA+BH,GAE/DI,qBAAU,WACR,OAAO,WAAM,IACmC,EADnC,IACiBH,GAAkB,IAA9C,IAAK,EAAL,qBAAgD,KAArCI,EAAa,QACtBA,EAAcC,gBACdD,EAAcE,aAAa,MAC3BF,EAAcG,YAAY,OAC3B,kCAEF,IAGH,IAAsF,IAAlBrG,IAAMkC,SAAS,IAAG,GAA/EoE,EAA0B,KAAEC,EAA6B,KAChEN,qBAAU,WACR,IACMO,EADsB7E,EAAgB8E,QAAO,SAACC,EAAWxG,GAAK,OAAKoF,EAAkCoB,EAAWxG,MAC/DsC,KAAI,SAACkE,EAAWxG,GACrE,MAAO,CACLK,cAAemG,EACflG,SAAUgF,EAActF,IAAU,SAGtCqG,EAA8BC,KAC7B,CAAC7E,EAAiB6D,EAAeF,IAEpCW,qBAAU,WACJP,IAAoB9C,IAAYC,YAAcR,GAChDuB,EAASU,IAAQqC,mBAAmB/D,IAAYC,eAEjD,CAAC4C,IAEJQ,qBAAU,WACR,IAAMW,EAAsB,SAACC,GAC3B,IAAMC,EAAaf,IAAKgB,cAClBC,EAAiBF,aAAU,EAAVA,EAAYG,KACnC,EAA+BJ,EAAEK,OAAzBC,EAAO,EAAPA,QAASC,EAAS,EAATA,UACbD,IAAYE,IAAWC,gBAAmBF,GACxCJ,IAAmBnB,GAAamB,IAAmBO,KACrDC,YAAoB7B,EAAO4B,MAMjC,OADAjJ,OAAOmJ,iBAAiBC,IAAOC,mBAAoBf,GAC5C,WACLtI,OAAOsJ,oBAAoBF,IAAOC,mBAAoBf,MAEvD,IAEH,IAAMhD,EAAWC,cAEXuC,EAAeyB,sBAAW,6BAAC,WAAO3H,GAAK,+EACnCK,EAAkB+F,EAA2BpG,GAA7CK,cACAuH,EAAevH,EAAfuH,WACRlE,EAASU,IAAQyD,mCAAmC7H,IACpD6F,IAAKiC,YAAYnC,GAAW,IACAC,GAAkB,yDAAtB,OAAbI,EAAa,kBAChBA,EAAcE,aAAa0B,GAAW,YACxC5B,EAAc+B,cAAe,CAAF,iCACvB/B,EAAcgC,eAAc,iDAE5BhC,EAAciC,cAAa,QACjCvE,EAASU,IAAQC,iBAAiBtD,IAAeC,iBAAiB,uMAGvE,mDAd+B,GAc7B,CAACoF,IAEED,EAAcwB,sBAAW,6BAAE,WAAO3H,GAAK,+EACnCM,EAAa8F,EAA2BpG,GAAxCM,SACAsH,EAAetH,EAAfsH,WACRlE,EAASU,IAAQyD,mCAAmC7H,IACpD6F,IAAKiC,YAAYnC,GAAW,IACAC,GAAkB,yDAAtB,OAAbI,EAAa,kBAChBA,EAAcG,YAAYyB,GAAW,YACvC5B,EAAc+B,cAAe,CAAF,iCACvB/B,EAAckC,cAAa,QAGjCxE,EAASU,IAAQC,iBAAiBtD,IAAeC,iBAAiB,yCAE5DgF,EAAcmC,sBAAqB,QACzCzE,EAASU,IAAQC,iBAAiBtD,IAAeK,WAAW,uMAGjE,mDAjB8B,GAiB3B,CAACgF,IAECgC,EAA6BT,sBAAW,6BAAC,WAAO3H,GAAK,2EACzD4F,EAAmB,GAAGyC,oBAAoBrI,GAC1C4F,EAAmB,GAAG0C,qBAAqBtI,GACrCuI,EAAsB3C,EAAmB,GAAGlB,sBAC5C8D,EAA8BjD,IAA2BvF,KAG7D4F,EAAmB3G,SAAQ,SAAC+G,GAC1BA,EAAcyC,cACdzC,EAAcE,aAAa,MAC3BF,EAAcG,YAAY,SAE5BN,IAAKiC,YAAYT,MAGgB,IAA/BkB,EAAoB5J,OACtB+E,EAASU,IAAQyD,mCAAmC,QAEhDa,EAAWnD,GACXiD,GAA+BxI,EAAQuF,KACzCmD,EAAWC,KAAKC,IAAI,EAAGrD,EAAyB,IAElD7B,EAASU,IAAQyD,mCAAmCa,KACrD,2CACF,mDAxB6C,GAwB3C,CAACnD,IAGJ,OACE,kBAACsD,EAAA,EAAkB,CAACC,YAAavE,IAAawE,qBAAsBlI,UAClEC,IAAW,EAAD,CACR,OAAS,EACT,oBAAsB,EACtB,cAAiBW,EAAgB9C,QAAUkD,IAAca,IAAYC,YACpEd,GAAY,KAGf,yBAAKhB,UAAU,+BACZiB,EAAE,8BAEL,kBAAC,EAAkB,CAAC2B,WAAY2C,EAA2BzH,QAAUwG,IACrE,kBAAC6D,EAAA,EAAO,MACR,kBAAC,EAAe,CACdvH,gBAAiB2E,EACjBnG,0BAA2BiG,EAC3BhG,qBAAsBiG,EACtBzE,cAAe0G,EACfzG,2BAA4B4D,EAC5B3D,iBAAkByD,EAClB7E,cAAeA,EACfqB,UAAWA,MAKnB4C,EAAmBtB,UAAY,CAC7BtB,UAAWuB,IAAUC,MAAMC,OAAOC,OAAOb,OAG5B+B,QC/LAA","file":"chunks/71.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./SignatureListPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.SignatureAddButton{width:auto;padding:8px;color:#2b73ab;border:1px solid #2b73ab;border-radius:4px;margin:16px 0}.SignatureAddButton:not(.disabled):hover{color:var(--primary-button-hover);border-color:var(--primary-button-hover)}.SignatureAddButton.disabled{color:#2b73ab;opacity:.5;cursor:not-allowed}.SignatureAddButton.disabled span{color:#2b73ab}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureAddButton{margin:16px}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureAddButton:not(.disabled):hover{color:#2b73ab;border:1px solid #2b73ab}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureAddButton{margin:16px}.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureAddButton:not(.disabled):hover{color:#2b73ab;border:1px solid #2b73ab}}.SignatureListPanel{height:100%;display:flex;flex-direction:column}.SignatureListPanel .signature-list-panel-header{font-size:16px;font-weight:700}.SignatureListPanel .signature-header{margin:16px 0;font-size:14px;font-weight:700}.SignatureListPanel .signature-list{padding-top:16px;overflow:auto}.SignatureListPanel .signature-row{display:flex;flex-direction:row;height:48px;justify-content:space-between;align-items:center;margin-top:8px}.SignatureListPanel .signature-row .icon-button{padding:0;border:none;background-color:transparent;display:flex;align-items:center;justify-content:center;width:34px;height:34px;border-radius:4px;cursor:pointer}:host(:not([data-tabbing=true])) .SignatureListPanel .signature-row .icon-button,html:not([data-tabbing=true]) .SignatureListPanel .signature-row .icon-button{outline:none}.SignatureListPanel .signature-row .icon-button:hover{background:var(--tools-overlay-button-hover)}.SignatureListPanel .signature-list-header{display:flex;flex-direction:row;align-items:center}.SignatureListPanel .signature-list-header .signature-title{flex-grow:2;margin-right:8px;min-width:160px}.SignatureListPanel .signature-list-header .initials-title{flex-grow:1;max-width:65px}.SignatureListPanel .signature-list-header .delete-spacer{width:40px}.SignatureListPanel .signature-row-container{display:flex;flex-direction:row;align-items:center;flex-grow:1}.SignatureListPanel .signature-row-container .signature-row-content{border:none;background-color:transparent;height:40px;padding:4px 8px;border:1px solid var(--border);border-radius:4px;display:flex;align-items:center;justify-content:center;cursor:pointer;margin-right:8px;background-color:var(--gray-0);flex-grow:2}:host(:not([data-tabbing=true])) .SignatureListPanel .signature-row-container .signature-row-content,html:not([data-tabbing=true]) .SignatureListPanel .signature-row-container .signature-row-content{outline:none}.SignatureListPanel .signature-row-container .signature-row-content img{max-width:100%;max-height:100%}.SignatureListPanel .signature-row-container .signature-row-content.interactable:hover{background:var(--tools-overlay-button-hover)}.SignatureListPanel .signature-row-container .signature-row-content.active,.SignatureListPanel .signature-row-container .signature-row-content.interactable.active{background:var(--tools-overlay-button-active)}.SignatureListPanel .signature-row-container .signature-row-content.removal-hovered{background:var(--popup-button-hover)!important}.SignatureListPanel .signature-row-container .signature-row-content .signature-button-icon{width:20px;height:20px;margin-top:2px}.SignatureListPanel .signature-row-container .initials{max-width:65px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel{width:100%;position:relative}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel.hideAddButton .SignatureAddButton,.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel .initials-title,.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel .signature-title,.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel.small-size .Divider{display:none}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel .signature-list-panel-header,.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel .signature-row{padding:0 16px}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel .signature-list{padding-bottom:16px;position:relative}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel .signature-list .signature-row{justify-content:center;margin-top:0;margin-bottom:8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel{width:100%;position:relative}.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel.hideAddButton .SignatureAddButton,.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel .initials-title,.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel .signature-title,.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel.small-size .Divider{display:none}.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel .signature-list-panel-header,.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel .signature-row{padding:0 16px}.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel .signature-list{padding-bottom:16px;position:relative}.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel .signature-list .signature-row{justify-content:center;margin-top:0;margin-bottom:8px}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Icon from 'components/Icon';\nimport classNames from 'classnames';\nimport SignatureModes from 'constants/signatureModes';\nimport { isMobileSize } from 'helpers/getDeviceSize';\nimport { PANEL_SIZES } from 'constants/panel';\nimport PropTypes from 'prop-types';\n\nconst SignatureRowContent = React.memo(({\n  index,\n  onFullSignatureSetHandler,\n  onInitialsSetHandler,\n  isActive,\n  altText,\n  fullSignature,\n  initials,\n  isHoveredForDeletion,\n  signatureMode,\n}) => {\n  const creatSignatureButton = (handler, imgSrc, signatureType) => (\n    <button\n      className={classNames('signature-row-content', {\n        'interactable': handler,\n        'active': isActive && signatureType === signatureMode,\n        'removal-hovered': isHoveredForDeletion,\n      }, `${signatureType === SignatureModes.FULL_SIGNATURE ? 'full-signature' : 'initials'}`)}\n      onClick={() => handler(index)}\n    >\n      <img alt={altText} src={imgSrc} />\n    </button>\n  );\n\n  return (\n    <div className='signature-row-container'>\n      {creatSignatureButton(onFullSignatureSetHandler, fullSignature?.imgSrc, SignatureModes.FULL_SIGNATURE)}\n      {initials && creatSignatureButton(onInitialsSetHandler, initials.imgSrc, SignatureModes.INITIALS)}\n    </div>\n  );\n});\n\nSignatureRowContent.displayName = 'SignatureRowContent';\n\n\nconst SavedSignatures = (props) => {\n  const {\n    savedSignatures,\n    onFullSignatureSetHandler,\n    onInitialsSetHandler,\n    deleteHandler,\n    currentlySelectedSignature,\n    isDeleteDisabled,\n    signatureMode,\n    panelSize,\n  } = props;\n\n  const { t } = useTranslation();\n  const [hoveredIndexToDelete, setHoveredIndexToDelete] = React.useState(null);\n\n  const renderSignatureListHeader = () => {\n    const renderInitialsHeader = savedSignatures.some(({ initials }) => initials);\n    return (\n      <div className='signature-list-header'>\n        <div className='signature-title'>{t('signatureListPanel.signatureList.signature')}</div>\n        {renderInitialsHeader && <div className='initials-title'>{t('signatureListPanel.signatureList.initials')}</div>}\n        <div className='delete-spacer'></div>\n      </div>\n    );\n  };\n\n  const isMobile = isMobileSize();\n\n  if (savedSignatures.length > 0) {\n    return (<div className='signature-list'>\n      {renderSignatureListHeader()}\n      {\n        savedSignatures\n          // Need to keep the index information from the original signature list\n          .map((signatureObject, index) => [signatureObject, index])\n          .map(([{ fullSignature, initials }, savedSignatureIndex]) => {\n            const isPanelSizeLarge = !panelSize || panelSize !== PANEL_SIZES.SMALL_SIZE;\n            const isMobileSizeWithSmallPanel = isMobile && panelSize === PANEL_SIZES.SMALL_SIZE;\n            if (isPanelSizeLarge || (isMobileSizeWithSmallPanel && currentlySelectedSignature === savedSignatureIndex)) {\n              return (<div\n                key={savedSignatureIndex}\n                className=\"signature-row\"\n              >\n                <SignatureRowContent\n                  index={savedSignatureIndex}\n                  fullSignature={fullSignature}\n                  initials={initials}\n                  onFullSignatureSetHandler={onFullSignatureSetHandler}\n                  onInitialsSetHandler={onInitialsSetHandler}\n                  isActive={currentlySelectedSignature === savedSignatureIndex}\n                  altText={`${t('option.toolsOverlay.signatureAltText')} ${savedSignatureIndex + 1}`}\n                  isHoveredForDeletion={hoveredIndexToDelete === savedSignatureIndex}\n                  signatureMode={signatureMode}\n                />\n                {!isDeleteDisabled && (\n                  <button\n                    className=\"icon-button\"\n                    data-element=\"defaultSignatureDeleteButton\"\n                    onMouseOver={() => setHoveredIndexToDelete(savedSignatureIndex)}\n                    onMouseLeave={() => setHoveredIndexToDelete(null)}\n                    onClick={() => {\n                      deleteHandler(savedSignatureIndex);\n                      setHoveredIndexToDelete(null);\n                    }}\n                  >\n                    <Icon glyph=\"icon-delete-line\" />\n                  </button>\n                )}\n              </div>);\n            }\n            return null;\n          })\n      }\n    </div>);\n  }\n  return null;\n};\n\nSavedSignatures.displayName = 'SavedSignatures';\nSavedSignatures.propTypes = {\n  panelSize: PropTypes.oneOf(Object.values(PANEL_SIZES)),\n};\n\nexport default React.memo(SavedSignatures);","import React from 'react';\nimport Button from '../Button';\nimport classNames from 'classnames';\nimport SignatureModes from 'constants/signatureModes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport { useTranslation } from 'react-i18next';\nimport DataElements from 'constants/dataElement';\n\nconst SignatureAddButton = ({ isDisabled }) => {\n  const dispatch = useDispatch();\n  const [t] = useTranslation();\n\n  const openSignatureModal = () => {\n    if (!isDisabled) {\n      dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n      dispatch(actions.openElement(DataElements.SIGNATURE_MODAL));\n    }\n  };\n\n  const isInitialsModeEnabled = useSelector((state) => selectors.getIsInitialsModeEnabled(state));\n  const buttonLabel = isInitialsModeEnabled ? 'signatureListPanel.newSignatureAndInitial' : 'signatureListPanel.newSignature';\n\n  return (\n    <Button\n      className={classNames(\n        'SignatureAddButton',\n        { disabled: isDisabled },\n      )}\n      label={t(buttonLabel)}\n      onClick={openSignatureModal} />\n  );\n};\n\nexport default React.memo(SignatureAddButton);","import React, { useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector, shallowEqual, useStore } from 'react-redux';\nimport DataElementWrapper from '../DataElementWrapper';\nimport defaultTool from 'constants/defaultTool';\nimport DataElements from 'constants/dataElement';\nimport SignatureModes from 'constants/signatureModes';\nimport { PANEL_SIZES, panelNames } from 'constants/panel';\nimport { isMobileSize } from 'helpers/getDeviceSize';\nimport setToolModeAndGroup from 'helpers/setToolModeAndGroup';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport classNames from 'classnames';\nimport './SignatureListPanel.scss';\nimport Divider from '../ModularComponents/Divider';\nimport SavedSignatures from './SavedSignatures';\nimport SignatureAddButton from './SignatureAddButton';\nimport core from 'core';\nimport PropTypes from 'prop-types';\nimport Events from 'constants/events';\n\nconst SignatureListPanel = ({ panelSize }) => {\n  const [t] = useTranslation();\n  const isMobile = isMobileSize();\n\n  const [\n    savedSignatures,\n    maxSignaturesCount,\n    displayedSignaturesFilterFunction,\n    isSignatureDeleteButtonDisabled,\n    savedInitials,\n    selectedSignatureIndex,\n    signatureMode,\n    mobilePanelSize\n  ] = useSelector(\n    (state) => [\n      selectors.getSavedSignatures(state),\n      selectors.getMaxSignaturesCount(state),\n      selectors.getDisplayedSignaturesFilterFunction(state),\n      selectors.isElementDisabled(state, 'defaultSignatureDeleteButton'),\n      selectors.getSavedInitials(state),\n      selectors.getSelectedDisplayedSignatureIndex(state),\n      selectors.getSignatureMode(state),\n      selectors.getMobilePanelSize(state),\n    ],\n    shallowEqual,\n  );\n  const store = useStore();\n  const TOOL_NAME = 'AnnotationCreateSignature';\n  const signatureToolArray = core.getToolsFromAllDocumentViewers(TOOL_NAME);\n\n  useEffect(() => {\n    return () => {\n      for (const signatureTool of signatureToolArray) {\n        signatureTool.clearLocation();\n        signatureTool.setSignature(null);\n        signatureTool.setInitials(null);\n      }\n    };\n  }, []);\n\n  // Saved signatures and initials are now in a single object. Merge them\n  const [savedSignaturesAndInitials, setSavedSignaturesAndInitials] = React.useState([]);\n  useEffect(() => {\n    const signaturesToDisplay = savedSignatures.filter((signature, index) => displayedSignaturesFilterFunction(signature, index));\n    const mergedSignaturesAndInitals = signaturesToDisplay.map((signature, index) => {\n      return {\n        fullSignature: signature,\n        initials: savedInitials[index] || null,\n      };\n    });\n    setSavedSignaturesAndInitials(mergedSignaturesAndInitals);\n  }, [savedSignatures, savedInitials, displayedSignaturesFilterFunction]);\n\n  useEffect(() => {\n    if (mobilePanelSize !== PANEL_SIZES.SMALL_SIZE && isMobile) {\n      dispatch(actions.setMobilePanelSize(PANEL_SIZES.SMALL_SIZE));\n    }\n  }, [selectedSignatureIndex]);\n\n  useEffect(() => {\n    const onVisibilityChanged = (e) => {\n      const activeTool = core.getToolMode();\n      const activeToolName = activeTool?.name;\n      const { element, isVisible } = e.detail;\n      if (element === panelNames.SIGNATURE_LIST && !isVisible) {\n        if (activeToolName === TOOL_NAME || activeToolName === defaultTool) {\n          setToolModeAndGroup(store, defaultTool);\n        }\n      }\n    };\n\n    window.addEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n    return () => {\n      window.removeEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n    };\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const setSignature = useCallback(async (index) => {\n    const { fullSignature } = savedSignaturesAndInitials[index];\n    const { annotation } = fullSignature;\n    dispatch(actions.setSelectedDisplayedSignatureIndex(index));\n    core.setToolMode(TOOL_NAME);\n    for (const signatureTool of signatureToolArray) {\n      await signatureTool.setSignature(annotation);\n      if (signatureTool.hasLocation()) {\n        await signatureTool.addSignature();\n      } else {\n        await signatureTool.showPreview();\n        dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n      }\n    }\n  }, [savedSignaturesAndInitials]);\n\n  const setInitials = useCallback((async (index) => {\n    const { initials } = savedSignaturesAndInitials[index];\n    const { annotation } = initials;\n    dispatch(actions.setSelectedDisplayedSignatureIndex(index));\n    core.setToolMode(TOOL_NAME);\n    for (const signatureTool of signatureToolArray) {\n      await signatureTool.setInitials(annotation);\n      if (signatureTool.hasLocation()) {\n        await signatureTool.addInitials();\n        // Default mode is fullSignature. If we dont reset it here there can be a bug where\n        // we preview the initials, but apply the full signature\n        dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n      } else {\n        await signatureTool.showInitialsPreview();\n        dispatch(actions.setSignatureMode(SignatureModes.INITIALS));\n      }\n    }\n  }), [savedSignaturesAndInitials]);\n\n  const deleteSignatureAndInitials = useCallback(async (index) => {\n    signatureToolArray[0].deleteSavedInitials(index);\n    signatureToolArray[0].deleteSavedSignature(index);\n    const remainingSignatures = signatureToolArray[0].getSavedSignatures();\n    const isDeletingSelectedSignature = selectedSignatureIndex === index;\n\n    if (isDeletingSelectedSignature) {\n      signatureToolArray.forEach((signatureTool) => {\n        signatureTool.hidePreview();\n        signatureTool.setSignature(null);\n        signatureTool.setInitials(null);\n      });\n      core.setToolMode(defaultTool);\n    }\n\n    if (remainingSignatures.length === 0) {\n      dispatch(actions.setSelectedDisplayedSignatureIndex(null));\n    } else {\n      let newIndex = selectedSignatureIndex;\n      if (isDeletingSelectedSignature || index < selectedSignatureIndex) {\n        newIndex = Math.max(0, selectedSignatureIndex - 1);\n      }\n      dispatch(actions.setSelectedDisplayedSignatureIndex(newIndex));\n    }\n  }, [selectedSignatureIndex]);\n\n\n  return (\n    <DataElementWrapper dataElement={DataElements.SIGNATURE_LIST_PANEL} className={\n      classNames({\n        'Panel': true,\n        'SignatureListPanel': true,\n        'hideAddButton': savedSignatures.length && panelSize === PANEL_SIZES.SMALL_SIZE,\n        [panelSize]: true,\n      })\n    }>\n      <div className='signature-list-panel-header'>\n        {t('signatureListPanel.header')}\n      </div>\n      <SignatureAddButton isDisabled={savedSignaturesAndInitials.length >= maxSignaturesCount} />\n      <Divider />\n      <SavedSignatures\n        savedSignatures={savedSignaturesAndInitials}\n        onFullSignatureSetHandler={setSignature}\n        onInitialsSetHandler={setInitials}\n        deleteHandler={deleteSignatureAndInitials}\n        currentlySelectedSignature={selectedSignatureIndex}\n        isDeleteDisabled={isSignatureDeleteButtonDisabled}\n        signatureMode={signatureMode}\n        panelSize={panelSize} />\n    </DataElementWrapper>\n  );\n};\n\nSignatureListPanel.propTypes = {\n  panelSize: PropTypes.oneOf(Object.values(PANEL_SIZES)),\n};\n\nexport default SignatureListPanel;","import SignatureListPanel from './SignatureListPanel';\n\nexport default SignatureListPanel;"],"sourceRoot":""}