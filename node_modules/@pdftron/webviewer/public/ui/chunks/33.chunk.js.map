{"version":3,"sources":["webpack:///./src/ui/src/constants/dnd.js","webpack:///./src/ui/src/components/Outline/Context.js","webpack:///./src/ui/src/components/OutlineContent/OutlineContent.js","webpack:///./src/ui/src/components/OutlineContent/index.js","webpack:///./src/ui/src/components/OutlineControls/OutlineControls.scss?17dd","webpack:///./src/ui/src/components/OutlineControls/OutlineControls.scss","webpack:///./src/ui/src/components/OutlineContent/OutlineContent.scss?2e51","webpack:///./src/ui/src/components/OutlineContent/OutlineContent.scss","webpack:///./src/ui/src/components/Outline/Outline.scss?a897","webpack:///./src/ui/src/components/Outline/Outline.scss","webpack:///./src/ui/src/components/OutlineControls/OutlineControls.js","webpack:///./src/ui/src/components/OutlineControls/index.js","webpack:///./src/ui/src/components/Outline/Outline.js","webpack:///./src/ui/src/components/Outline/index.js","webpack:///./src/ui/src/components/ModularComponents/GenericOutlinesPanel/GenericOutlinesPanel.scss?b193","webpack:///./src/ui/src/components/ModularComponents/GenericOutlinesPanel/GenericOutlinesPanel.scss","webpack:///./src/ui/src/components/ModularComponents/GenericOutlinesPanel/OutlinesDragLayer.js","webpack:///./src/ui/src/components/ModularComponents/GenericOutlinesPanel/GenericOutlinesPanel.js","webpack:///./src/ui/src/components/ModularComponents/GenericOutlinesPanel/index.js"],"names":["ItemTypes","OUTLINE","PORTFOLIO","DropLocation","ON_TARGET_HORIZONTAL_MIDPOINT","ABOVE_TARGET","BELOW_TARGET","INITIAL","BUFFER_ROOM","OutlineContext","React","createContext","propTypes","text","PropTypes","string","isRequired","outlinePath","isAdding","bool","isOutlineRenaming","setOutlineRenaming","func","isOutlineChangingDest","setOutlineChangingDest","setIsHovered","onCancel","textColor","OutlineContent","useContext","currentDestPage","currentDestText","editingOutlines","setEditingOutlines","isMultiSelectMode","isOutlineEditable","addNewOutline","renameOutline","updateOutlineDest","updateOutlines","removeOutlines","t","useTranslation","useState","isDefault","setIsDefault","outlineText","setOutlineText","isContextMenuOpen","setContextMenuOpen","inputRef","useRef","onAddOutline","trim","onRenameOutline","onCancelOutline","isRenameButtonDisabled","useEffect","current","focus","select","editingOutlinesClone","isOutlineEditing","textStyle","color","className","onDoubleClick","style","Button","dataElement","img","tabIndex","onClick","e","stopPropagation","MoreOptionsContextMenuPopup","type","anchorButton","shouldDisplayDeleteButton","onClosePopup","onRenameClick","onSetDestinationClick","core","setToolMode","onDeleteClick","name","ref","placeholder","aria-label","value","onKeyDown","key","onChange","target","fontStyle","label","isSubmitType","disabled","api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","OutlineControls","outlines","useSelector","state","selectors","getOutlines","activeOutlinePath","setActiveOutlinePath","up","down","outward","inward","canMove","setCanMove","nextIndexRef","isFullPDFEnabled","outlineUtils","getCanMoveState","setCanMoveState","moveOutlineUp","nextIndex","moveOutlineDown","moveOutlineOutward","moveOutlineInward","DataElementWrapper","DataElements","OUTLINE_CONTROLS","OUTLINE_MOVE_UP_BUTTON","OUTLINE_MOVE_DOWN_BUTTON","OUTLINE_MOVE_OUTWARD_BUTTON","OUTLINE_MOVE_INWARD_BUTTON","outline","object","setMultiSelected","moveOutlineBeforeTarget","moveOutlineAfterTarget","connectDragSource","connectDragPreview","connectDropTarget","isDragging","isDraggedUpwards","isDraggedDownwards","Outline","forwardRef","isOutlineActive","setAddingNewOutline","isAddingNewOutline","isAnyOutlineRenaming","shouldAutoExpandOutlines","selectedOutlines","getPath","isExpanded","setIsExpanded","includes","isSelected","setIsSelected","isRenaming","setIsRenaming","isChangingDest","setChangingDest","isHovered","setHovered","undefined","clearSingleClick","setClearSingleClick","dispatch","useDispatch","elementRef","getEmptyImage","captureDraggingState","opacity","useImperativeHandle","getNode","startsWith","useLayoutEffect","rgbObject","rValue","gValue","bValue","toggleOutline","useCallback","expand","onSingleClick","goToOutline","isMobile","actions","closeElement","isActive","classNames","detail","setTimeout","clearTimeout","Choice","id","checked","expanded","marginLeft","getNestedLevel","getChildren","getName","map","child","OutlineNested","getOutlineId","DropTarget","hover","props","dropTargetMonitor","dropTargetContainer","dragObject","getItem","dragOutline","dragSourceNode","dropOutline","dropTargetNode","contains","dropLocation","dragIndex","index","hoverIndex","parent","dropTargetBoundingRect","getBoundingClientRect","dropTargetVerticalMiddlePoint","bottom","top","dropTargetClientY","getClientOffset","y","isOver","shallow","classList","add","remove","fireEvent","Events","DRAG_OUTLINE","targetOutline","draggedOutline","drop","DROP_OUTLINE","connect","dropTargetState","dropTarget","DragSource","beginDrag","dragSourceMonitor","dragSourceContainer","sourceId","canDrag","isIE","console","warn","dragSourceState","dragSource","dragPreview","layerStyles","position","pointerEvents","zIndex","left","width","height","getItemStyles","initialOffset","currentOffset","display","x","transform","WebkitTransform","OutlinesDragLayer","useDragLayer","dragLayerState","itemType","getItemType","item","getInitialSourceClientOffset","renderDragItem","GenericOutlinesPanel","isElementDisabled","isOutlineControlVisible","getOutlineEditingEnabled","getCurrentPage","getPageLabels","shallowEqual","isDisabled","outlineControlVisibility","outlineEditingEnabled","currentPage","pageLabels","defaultDestText","areaDestinationText","defaultDestCoord","setCurrentDestText","currentDestCoord","setCurrentDestCoord","setCurrentDestPage","setOutlineEditable","setAnyOutlineRenaming","setMultiSelectMode","setSelectedOutlines","nextPathRef","TOOL_NAME","tool","getTool","isAnyEditing","Object","values","some","onSetDestination","annotation","getCustomData","onOutlinesBookmarksChanged","setOutlines","onDocumentLoaded","addEventListener","removeEventListener","getCurrentDestViewerCoord","pageNum","getDocumentViewer","getDocument","getViewerCoordinates","outlineName","slice","addRootOutline","nextPath","clearOutlineDestination","defaultTool","setOutlineDestination","generalMoveOutlineAction","moveDirection","dragPath","dropPath","call","then","path","moveOutlineInTarget","newName","setOutlineName","outlinesToRemove","sort","reverse","confirmationWarning","message","title","confirmBtnText","onConfirm","fullIndex","deleteOutline","showWarningMessage","OUTLINE_MULTI_SELECT","Provider","DndProvider","backend","isMobileDevice","TouchBackEnd","HTML5Backend","find","filter","OUTLINE_ADD_NEW_BUTTON_CONTAINER","OUTLINE_ADD_NEW_BUTTON","memo"],"mappings":"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","file":"chunks/33.chunk.js","sourcesContent":["export const ItemTypes = {\n  OUTLINE: 'outline',\n  PORTFOLIO: 'portfolio',\n};\n\nexport const DropLocation = {\n  ON_TARGET_HORIZONTAL_MIDPOINT: 'onTargetHorizontalMidPoint',\n  ABOVE_TARGET: 'aboveTarget',\n  BELOW_TARGET: 'belowTarget',\n  INITIAL: 'initial',\n};\n\nexport const BUFFER_ROOM = 8;","import React from 'react';\n\nconst OutlineContext = React.createContext();\n\nexport default OutlineContext;","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport core from 'core';\n\nimport Button from '../Button';\nimport MoreOptionsContextMenuPopup from '../MoreOptionsContextMenuPopup';\nimport OutlineContext from '../Outline/Context';\nimport './OutlineContent.scss';\n\nconst propTypes = {\n  text: PropTypes.string.isRequired,\n  outlinePath: PropTypes.string,\n  isAdding: PropTypes.bool,\n  isOutlineRenaming: PropTypes.bool,\n  setOutlineRenaming: PropTypes.func,\n  isOutlineChangingDest: PropTypes.bool,\n  setOutlineChangingDest: PropTypes.func,\n  setIsHovered: PropTypes.func,\n  onCancel: PropTypes.func,\n  textColor: PropTypes.string,\n};\n\nconst OutlineContent = ({\n  text,\n  outlinePath,\n  isAdding,\n  isOutlineRenaming,\n  setOutlineRenaming,\n  isOutlineChangingDest,\n  setOutlineChangingDest,\n  setIsHovered,\n  onCancel,\n  textColor,\n}) => {\n  const {\n    currentDestPage,\n    currentDestText,\n    editingOutlines,\n    setEditingOutlines,\n    isMultiSelectMode,\n    isOutlineEditable,\n    addNewOutline,\n    renameOutline,\n    updateOutlineDest,\n    updateOutlines,\n    removeOutlines,\n  } = useContext(OutlineContext);\n\n  const [t] = useTranslation();\n  const TOOL_NAME = 'OutlineDestinationCreateTool';\n\n  const [isDefault, setIsDefault] = useState(false);\n  const [outlineText, setOutlineText] = useState(text);\n  const [isContextMenuOpen, setContextMenuOpen] = useState(false);\n  const inputRef = useRef();\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      if (isAdding) {\n        onAddOutline();\n      }\n      if (isOutlineRenaming && !isRenameButtonDisabled()) {\n        onRenameOutline();\n      }\n    }\n    if (e.key === 'Escape') {\n      onCancelOutline();\n    }\n  };\n\n  const onAddOutline = () => {\n    addNewOutline(outlineText.trim() === '' ? '' : outlineText);\n  };\n\n  const onRenameOutline = () => {\n    setOutlineRenaming(false);\n    renameOutline(outlinePath, outlineText);\n  };\n\n  const onCancelOutline = () => {\n    updateOutlines();\n    if (isOutlineRenaming) {\n      setOutlineRenaming(false);\n      setOutlineText(text);\n    }\n    if (isOutlineChangingDest) {\n      setOutlineChangingDest(false);\n    }\n    if (isAdding) {\n      onCancel();\n    }\n  };\n\n  const isRenameButtonDisabled = () => {\n    return !outlineText || text === outlineText;\n  };\n\n  useEffect(() => {\n    if (outlineText !== text) {\n      setOutlineText(text);\n    }\n  }, [text]);\n\n  useEffect(() => {\n    if (isAdding || isOutlineRenaming) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n\n    setIsDefault(!isAdding && !isOutlineRenaming && !isOutlineChangingDest);\n  }, [isOutlineRenaming, isOutlineChangingDest]);\n\n  useEffect(() => {\n    const editingOutlinesClone = { ...editingOutlines };\n    const isOutlineEditing = isOutlineRenaming || isOutlineChangingDest;\n    if (isOutlineEditing) {\n      editingOutlinesClone[outlinePath] = (isOutlineEditing);\n    } else {\n      delete editingOutlinesClone[outlinePath];\n    }\n    setEditingOutlines({ ...editingOutlinesClone });\n  }, [isOutlineRenaming, isOutlineChangingDest]);\n\n  useEffect(() => {\n    if (!isAdding) {\n      setIsHovered(isContextMenuOpen);\n    }\n  }, [isContextMenuOpen]);\n\n  const textStyle = {\n    color: textColor || 'auto'\n  };\n\n  return (\n    <div className=\"bookmark-outline-label-row\">\n      {isAdding &&\n        <div className=\"bookmark-outline-label\">\n          {t('component.newOutlineTitle')}\n        </div>\n      }\n\n      {isDefault &&\n        <>\n          <div\n            className=\"bookmark-outline-text outline-text\"\n            onDoubleClick={() => {\n              if (isOutlineEditable) {\n                setOutlineRenaming(true);\n              }\n            }}\n            style={textStyle}\n          >\n            {text}\n          </div>\n\n          {isOutlineEditable &&\n            <Button\n              className=\"bookmark-outline-more-button\"\n              dataElement={`outline-more-button-${outlinePath}`}\n              img=\"icon-tool-more\"\n              tabIndex={-1}\n              onClick={(e) => {\n                e.stopPropagation();\n                setContextMenuOpen(true);\n              }}\n            />\n          }\n          {isContextMenuOpen &&\n            <MoreOptionsContextMenuPopup\n              type={'outline'}\n              anchorButton={`outline-more-button-${outlinePath}`}\n              shouldDisplayDeleteButton={!isMultiSelectMode}\n              onClosePopup={() => setContextMenuOpen(false)}\n              onRenameClick={() => {\n                setContextMenuOpen(false);\n                setOutlineRenaming(true);\n              }}\n              onSetDestinationClick={() => {\n                setContextMenuOpen(false);\n                setOutlineChangingDest(true);\n                core.setToolMode(TOOL_NAME);\n              }}\n              onDeleteClick={() => {\n                setContextMenuOpen(false);\n                removeOutlines([outlinePath]);\n              }}\n            />\n          }\n        </>\n      }\n\n      {isOutlineChangingDest &&\n        <div\n          className=\"bookmark-outline-text outline-text\"\n          style={textStyle}\n        >\n          {text}\n        </div>\n      }\n\n      {(isAdding || isOutlineRenaming) &&\n        <input\n          type=\"text\"\n          name=\"outline\"\n          ref={inputRef}\n          className=\"bookmark-outline-input\"\n          placeholder={t('component.outlineTitle')}\n          aria-label={t('action.name')}\n          value={outlineText}\n          onKeyDown={handleKeyDown}\n          onChange={(e) => setOutlineText(e.target.value)}\n        />\n      }\n\n      {(isAdding || isOutlineChangingDest) &&\n        <div className=\"outline-destination\">\n          {t('component.destination')}: {t('component.bookmarkPage')} {currentDestPage},\n          <span style={{ fontStyle: 'italic' }}> “{currentDestText}”</span>\n        </div>\n      }\n\n      {(isAdding || isOutlineRenaming || isOutlineChangingDest) &&\n        <div className=\"bookmark-outline-editing-controls\">\n          <Button\n            className=\"bookmark-outline-cancel-button\"\n            label={t('action.cancel')}\n            onClick={onCancelOutline}\n          />\n          {isAdding &&\n            <Button\n              className=\"bookmark-outline-save-button\"\n              label={t('action.add')}\n              isSubmitType={true}\n              onClick={onAddOutline}\n            />\n          }\n          {isOutlineRenaming &&\n            <Button\n              className=\"bookmark-outline-save-button\"\n              label={t('action.save')}\n              isSubmitType={true}\n              disabled={isRenameButtonDisabled()}\n              onClick={onRenameOutline}\n            />\n          }\n          {isOutlineChangingDest &&\n            <Button\n              className=\"bookmark-outline-save-button\"\n              label={t('action.save')}\n              isSubmitType={true}\n              onClick={() => {\n                setOutlineChangingDest(false);\n                updateOutlineDest(outlinePath);\n              }}\n            />\n          }\n        </div>\n      }\n    </div>\n  );\n};\n\nOutlineContent.propTypes = propTypes;\n\nexport default OutlineContent;\n","import OutlineContent from './OutlineContent';\n\nexport default OutlineContent;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./OutlineControls.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.OutlineControls{display:flex;justify-content:center;align-items:center;margin-left:var(--padding);margin-right:var(--padding);border-bottom:1px solid var(--border);padding-top:4px;padding-bottom:4px;color:var(--faded-text)}.OutlineControls .Button{height:30px;padding:0;width:30px;margin:0 4px}.OutlineControls .Button .Icon{height:24px;width:24px;color:var(--icon-color)}.OutlineControls .Button:hover{background:var(--view-header-button-hover);border-radius:4px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./OutlineContent.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".outline-destination,.outline-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.outline-destination{flex-basis:100%;font-size:10px;color:var(--faded-text);margin-top:var(--padding-small)}\", \"\"]);\n\n// exports\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./Outline.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.outline-drag-container{border-radius:4px}.outline-drag-container.isNesting>.bookmark-outline-single-container{background-color:var(--popup-button-active);border-color:var(--focus-border)}.outline-treeview-toggle{flex-grow:0;flex-shrink:0;margin-right:var(--padding-small);min-width:14px;transition:transform .1s ease}.outline-treeview-toggle.expanded{transform:rotate(90deg)}.outline-treeview-toggle .Button{width:auto;height:auto}.outline-treeview-toggle .Button .Icon{width:14px;height:auto}.outline-drag-line{margin-left:var(--padding);margin-right:var(--padding);border-top:1px solid var(--focus-border);position:relative}.outline-drag-line:before{content:\\\"\\\";display:block;position:absolute;width:5px;height:5px;top:-3px;left:0;background-color:var(--focus-border);border-radius:50%}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from 'components/Button';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport OutlineContext from 'components/Outline/Context';\n\nimport core from 'core';\nimport outlineUtils from 'helpers/OutlineUtils';\nimport selectors from 'selectors';\n\nimport './OutlineControls.scss';\nimport DataElements from 'src/constants/dataElement';\n\nconst OutlineControls = () => {\n  const outlines = useSelector((state) => selectors.getOutlines(state));\n  const {\n    activeOutlinePath,\n    setActiveOutlinePath,\n    updateOutlines\n  } = useContext(OutlineContext);\n  const [canMove, setCanMove] = useState({ up: false, down: false, outward: false, inward: false });\n  const nextIndexRef = useRef(null);\n  const [t] = useTranslation();\n\n  useEffect(() => {\n    if (!core.isFullPDFEnabled()) {\n      return;\n    }\n\n    const setCanMoveState = async () => {\n      setCanMove(await outlineUtils.getCanMoveState(activeOutlinePath));\n    };\n\n    setCanMoveState();\n  }, [activeOutlinePath]);\n\n  useEffect(() => {\n    if (nextIndexRef.current !== null) {\n      setActiveOutlinePath(nextIndexRef.current);\n      nextIndexRef.current = null;\n    }\n  }, [outlines, setActiveOutlinePath]);\n\n  const moveOutlineUp = async () => {\n    const nextIndex = await outlineUtils.moveOutlineUp(activeOutlinePath);\n    updateOutlines();\n    nextIndexRef.current = nextIndex;\n  };\n\n  const moveOutlineDown = async () => {\n    const nextIndex = await outlineUtils.moveOutlineDown(activeOutlinePath);\n    updateOutlines();\n    nextIndexRef.current = nextIndex;\n  };\n\n  const moveOutlineOutward = async () => {\n    const nextIndex = await outlineUtils.moveOutlineOutward(activeOutlinePath);\n    updateOutlines();\n    nextIndexRef.current = nextIndex;\n  };\n\n  const moveOutlineInward = async () => {\n    const nextIndex = await outlineUtils.moveOutlineInward(activeOutlinePath);\n    updateOutlines();\n    nextIndexRef.current = nextIndex;\n  };\n\n  return (\n    <DataElementWrapper\n      className=\"OutlineControls\"\n      dataElement={DataElements.OUTLINE_CONTROLS}\n    >\n      <span className=\"reorderText\">\n        {t('option.bookmarkOutlineControls.reorder')}\n      </span>\n      <Button\n        img=\"icon-arrow-up\"\n        disabled={!canMove.up}\n        onClick={moveOutlineUp}\n        dataElement={DataElements.OUTLINE_MOVE_UP_BUTTON}\n      />\n      <Button\n        img=\"icon-arrow-down\"\n        disabled={!canMove.down}\n        onClick={moveOutlineDown}\n        dataElement={DataElements.OUTLINE_MOVE_DOWN_BUTTON}\n      />\n      <Button\n        img=\"icon-arrow-left\"\n        disabled={!canMove.outward}\n        onClick={moveOutlineOutward}\n        dataElement={DataElements.OUTLINE_MOVE_OUTWARD_BUTTON}\n      />\n      <Button\n        img=\"icon-arrow-right\"\n        disabled={!canMove.inward}\n        onClick={moveOutlineInward}\n        dataElement={DataElements.OUTLINE_MOVE_INWARD_BUTTON}\n      />\n    </DataElementWrapper>\n  );\n};\n\nexport default OutlineControls;\n","import OutlineControls from './OutlineControls';\n\nexport default OutlineControls;","import React, { useState, useCallback, useContext, useEffect, useLayoutEffect, forwardRef, useImperativeHandle, useRef } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { ItemTypes, DropLocation, BUFFER_ROOM } from 'constants/dnd';\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\n\nimport Events from 'constants/events';\nimport fireEvent from 'helpers/fireEvent';\nimport outlineUtils from 'helpers/OutlineUtils';\nimport { isMobile, isIE } from 'helpers/device';\nimport OutlineContext from './Context';\nimport OutlineContent from 'src/components/OutlineContent';\nimport DataElementWrapper from '../DataElementWrapper';\nimport Choice from '../Choice';\nimport Button from '../Button';\n\nimport './Outline.scss';\n\nconst propTypes = {\n  outline: PropTypes.object.isRequired,\n  setMultiSelected: PropTypes.func,\n  moveOutlineInward: PropTypes.func.isRequired,\n  moveOutlineBeforeTarget: PropTypes.func.isRequired,\n  moveOutlineAfterTarget: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func,\n  connectDragPreview: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  isDragging: PropTypes.bool,\n  isDraggedUpwards: PropTypes.bool,\n  isDraggedDownwards: PropTypes.bool,\n};\n\nconst Outline = forwardRef(\n  function Outline(\n    {\n      outline,\n      setMultiSelected,\n      isDragging,\n      isDraggedUpwards,\n      isDraggedDownwards,\n      connectDragSource,\n      connectDragPreview,\n      connectDropTarget,\n      moveOutlineInward,\n      moveOutlineBeforeTarget,\n      moveOutlineAfterTarget\n    },\n    ref\n  ) {\n    const outlines = useSelector((state) => selectors.getOutlines(state));\n    const {\n      setActiveOutlinePath,\n      activeOutlinePath,\n      isOutlineActive,\n      setAddingNewOutline,\n      isAddingNewOutline,\n      isAnyOutlineRenaming,\n      isMultiSelectMode,\n      shouldAutoExpandOutlines,\n      isOutlineEditable,\n      selectedOutlines,\n      updateOutlines,\n    } = useContext(OutlineContext);\n\n    const outlinePath = outlineUtils.getPath(outline);\n\n    const [isExpanded, setIsExpanded] = useState(shouldAutoExpandOutlines);\n    const [isSelected, setIsSelected] = useState(selectedOutlines.includes(outlinePath));\n    const [isRenaming, setIsRenaming] = useState(false);\n    const [isChangingDest, setChangingDest] = useState(false);\n    const [isHovered, setHovered] = useState(false); // when the popup menu is open, the container will have a background\n    const [clearSingleClick, setClearSingleClick] = useState(undefined);\n\n    const dispatch = useDispatch();\n\n    const elementRef = useRef(null);\n    connectDragSource(elementRef);\n    connectDragPreview(getEmptyImage(), { captureDraggingState: true });\n    connectDropTarget(elementRef);\n    const opacity = isDragging ? 0.5 : 1;\n    useImperativeHandle(ref, () => ({\n      getNode: () => elementRef.current,\n    }));\n\n    useEffect(() => {\n      const shouldExpandOutline =\n        activeOutlinePath !== null\n        && activeOutlinePath !== outlinePath\n        && activeOutlinePath.startsWith(outlinePath);\n      if (shouldExpandOutline) {\n        setIsExpanded(true);\n      }\n    }, [activeOutlinePath, isAddingNewOutline, outline]);\n\n    useLayoutEffect(() => {\n      setIsExpanded(shouldAutoExpandOutlines);\n    }, [shouldAutoExpandOutlines]);\n\n    useLayoutEffect(() => {\n      setIsRenaming(false);\n      setChangingDest(false);\n    }, [outlines]);\n\n    useEffect(() => {\n      setIsSelected(selectedOutlines.includes(outlinePath));\n    }, [selectedOutlines]);\n\n    const toggleOutline = useCallback(() => {\n      setIsExpanded((expand) => !expand);\n    }, []);\n\n    const onSingleClick = useCallback(() => {\n      core.goToOutline(outline);\n\n      outlinePath === activeOutlinePath\n        ? setActiveOutlinePath(null)\n        : setActiveOutlinePath(outlinePath);\n\n\n      if (isAddingNewOutline) {\n        setAddingNewOutline(false);\n        updateOutlines();\n      }\n\n      if (isMobile()) {\n        dispatch(actions.closeElement('leftPanel'));\n      }\n    }, [dispatch, setActiveOutlinePath, activeOutlinePath, isAddingNewOutline, outline]);\n\n    const isActive = isOutlineActive(outline);\n\n    const convertRgbObjectToRgbString = (rgbObject) => {\n      const rValue = rgbObject['r'] * 255;\n      const gValue = rgbObject['g'] * 255;\n      const bValue = rgbObject['b'] * 255;\n      return `rgb(${rValue}, ${gValue}, ${bValue})`;\n    };\n\n    return (\n      <div\n        ref={(!isAddingNewOutline && !isAnyOutlineRenaming && isMultiSelectMode && isOutlineEditable) ? elementRef : null}\n        className=\"outline-drag-container\"\n        style={{ opacity }}\n      >\n        <div className=\"outline-drag-line\" style={{ opacity: isDraggedUpwards ? 1 : 0 }} />\n        <DataElementWrapper\n          className={classNames({\n            'bookmark-outline-single-container': true,\n            'editing': isRenaming || isChangingDest,\n            'default': !isRenaming && !isChangingDest,\n            'selected': isActive,\n            'hover': isHovered && !isActive,\n          })}\n          tabIndex={0}\n          onKeyDown={(e) => e.key === 'Enter' && onSingleClick()}\n          onClick={(e) => {\n            if (!isRenaming && !isChangingDest && e.detail === 1) {\n              setClearSingleClick(setTimeout(onSingleClick, 300));\n            }\n          }}\n          onDoubleClick={() => {\n            if (!isRenaming && !isChangingDest) {\n              clearTimeout(clearSingleClick);\n            }\n          }}\n        >\n          {isMultiSelectMode &&\n            <Choice\n              type=\"checkbox\"\n              className=\"bookmark-outline-checkbox\"\n              id={`outline-checkbox-${outlinePath}`}\n              checked={isSelected}\n              onClick={(e) => e.stopPropagation()}\n              onChange={(e) => {\n                setIsSelected(e.target.checked);\n                setMultiSelected(outlinePath, e.target.checked);\n              }}\n            />\n          }\n\n          <div\n            className={classNames({\n              'outline-treeview-toggle': true,\n              expanded: isExpanded,\n            })}\n            style={{ marginLeft: outlineUtils.getNestedLevel(outline) * 12 }}\n          >\n            {outline.getChildren().length > 0 &&\n              <Button\n                img=\"icon-chevron-right\"\n                tabIndex={0}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  toggleOutline();\n                }}\n              />\n            }\n          </div>\n\n          <OutlineContent\n            text={outline.getName()}\n            outlinePath={outlinePath}\n            isOutlineRenaming={isRenaming}\n            setOutlineRenaming={setIsRenaming}\n            isOutlineChangingDest={isChangingDest}\n            setOutlineChangingDest={setChangingDest}\n            setIsHovered={setHovered}\n            textColor={outline.color ? convertRgbObjectToRgbString(outline.color) : null}\n          />\n        </DataElementWrapper>\n\n        <div className=\"outline-drag-line\" style={{ opacity: isDraggedDownwards ? 1 : 0 }} />\n\n        {isExpanded &&\n          outline.getChildren().map((child) => (\n            <OutlineNested\n              outline={child}\n              key={outlineUtils.getOutlineId(child)}\n              setMultiSelected={setMultiSelected}\n              moveOutlineInward={moveOutlineInward}\n              moveOutlineBeforeTarget={moveOutlineBeforeTarget}\n              moveOutlineAfterTarget={moveOutlineAfterTarget}\n            />\n          ))\n        }\n        {isAddingNewOutline && isActive && (\n          <DataElementWrapper className=\"bookmark-outline-single-container editing\">\n            <div\n              className=\"outline-treeview-toggle\"\n              style={{ marginLeft: outlineUtils.getNestedLevel(outline) * 12 }}\n            ></div>\n            <OutlineContent\n              isAdding={true}\n              text={''}\n              onCancel={() => setAddingNewOutline(false)}\n            />\n          </DataElementWrapper>\n        )}\n      </div>\n    );\n  }\n);\n\nOutline.propTypes = propTypes;\n\nconst OutlineNested = DropTarget(\n  ItemTypes.OUTLINE,\n  {\n    hover(props, dropTargetMonitor, dropTargetContainer) {\n      if (!dropTargetContainer) {\n        return;\n      }\n\n      const dragObject = dropTargetMonitor.getItem();\n      if (!dragObject) {\n        return;\n      }\n\n      const { dragOutline, dragSourceNode } = dragObject;\n      const { outline: dropOutline } = props;\n\n      const dropTargetNode = dropTargetContainer.getNode();\n      if (!dragSourceNode || !dropTargetNode) {\n        return;\n      }\n\n      const outlineIsBeingDraggedIntoDescendant = dragSourceNode.contains(dropTargetNode);\n      if (outlineIsBeingDraggedIntoDescendant) {\n        dragObject.dropTargetNode = undefined;\n        dragObject.dropLocation = DropLocation.INITIAL;\n        return;\n      }\n\n      dragObject.dropTargetNode = dropTargetNode;\n      const dragIndex = dragOutline.index;\n      const hoverIndex = dropOutline.index;\n      if (dragOutline.parent === dropOutline.parent && dragIndex === hoverIndex) {\n        return;\n      }\n\n      const dropTargetBoundingRect = dropTargetNode.getBoundingClientRect();\n      const dropTargetVerticalMiddlePoint = (dropTargetBoundingRect.bottom - dropTargetBoundingRect.top) / 2;\n      const clientOffset = dropTargetMonitor.getClientOffset();\n      const dropTargetClientY = clientOffset.y - dropTargetBoundingRect.top;\n      switch (true) {\n        case dropTargetClientY <= dropTargetVerticalMiddlePoint + BUFFER_ROOM && dropTargetClientY >= dropTargetVerticalMiddlePoint - BUFFER_ROOM:\n          dragObject.dropLocation = DropLocation.ON_TARGET_HORIZONTAL_MIDPOINT;\n          if (dropTargetMonitor.isOver({ shallow: true })) {\n            dropTargetNode.classList.add('isNesting');\n          }\n          setTimeout(() => {\n            if (dragObject?.dropTargetNode !== dropTargetNode) {\n              dropTargetNode.classList.remove('isNesting');\n            }\n          }, 100);\n          break;\n        case dropTargetClientY > dropTargetVerticalMiddlePoint + BUFFER_ROOM:\n          dragObject.dropLocation = DropLocation.BELOW_TARGET;\n          dropTargetNode.classList.remove('isNesting');\n          break;\n        case dropTargetClientY < dropTargetVerticalMiddlePoint - BUFFER_ROOM:\n          dragObject.dropLocation = DropLocation.ABOVE_TARGET;\n          dropTargetNode.classList.remove('isNesting');\n          break;\n        default:\n          dragObject.dropLocation = DropLocation.INITIAL;\n          dropTargetNode.classList.remove('isNesting');\n          break;\n      }\n      fireEvent(Events.DRAG_OUTLINE,\n        {\n          targetOutline: dropOutline,\n          draggedOutline: dragObject.dragOutline,\n          dropLocation: dragObject.dropLocation\n        }\n      );\n    },\n    drop(props, dropTargetMonitor, dropTargetContainer) {\n      if (!dropTargetContainer) {\n        return;\n      }\n      const dragObject = dropTargetMonitor.getItem();\n      const { dragOutline, dropTargetNode } = dragObject;\n      const { outline: dropOutline, moveOutlineInward, moveOutlineBeforeTarget, moveOutlineAfterTarget } = props;\n\n      if (!dropTargetNode) {\n        return;\n      }\n\n      switch (dragObject.dropLocation) {\n        case DropLocation.ON_TARGET_HORIZONTAL_MIDPOINT:\n          moveOutlineInward(dragOutline, dropOutline);\n          break;\n        case DropLocation.ABOVE_TARGET:\n          moveOutlineBeforeTarget(dragOutline, dropOutline);\n          break;\n        case DropLocation.BELOW_TARGET:\n          moveOutlineAfterTarget(dragOutline, dropOutline);\n          break;\n        default:\n          break;\n      }\n      dropTargetNode.classList.remove('isNesting');\n      fireEvent(Events.DROP_OUTLINE,\n        {\n          targetOutline: dropOutline,\n          draggedOutline: dragOutline,\n          dropLocation: dragObject.dropLocation\n        }\n      );\n      dragObject.dropLocation = DropLocation.INITIAL;\n    }\n  },\n  (connect, dropTargetState) => ({\n    connectDropTarget: connect.dropTarget(),\n    isDraggedUpwards: dropTargetState.isOver({ shallow: true }) && (dropTargetState.getItem()?.dropLocation === DropLocation.ABOVE_TARGET),\n    isDraggedDownwards: dropTargetState.isOver({ shallow: true }) && (dropTargetState.getItem()?.dropLocation === DropLocation.BELOW_TARGET),\n  })\n)(DragSource(\n  ItemTypes.OUTLINE,\n  {\n    beginDrag: (props, dragSourceMonitor, dragSourceContainer) => ({\n      sourceId: dragSourceMonitor.sourceId,\n      dragOutline: props.outline,\n      dragSourceNode: dragSourceContainer.getNode(),\n      dropLocation: DropLocation.INITIAL,\n    }),\n    canDrag() {\n      if (isIE) {\n        console.warn('Drag and drop outlines for IE11 is not supported');\n        return false;\n      }\n      if (!core.isFullPDFEnabled()) {\n        console.warn('Full API must be enabled to drag and drop outlines');\n        return false;\n      }\n      return true;\n    }\n  },\n  (connect, dragSourceState) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: dragSourceState.isDragging(),\n  })\n)(Outline));\n\nOutlineNested.propTypes = propTypes;\n\nexport default OutlineNested;\n","import Outline from './Outline';\n\nexport default Outline;\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./GenericOutlinesPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.GenericOutlinesPanel{display:flex;flex-direction:column;flex:1}.GenericOutlinesPanel .bookmark-outline-single-container{margin-top:6px;margin-bottom:6px}.GenericOutlinesPanel .bookmark-outline-row{padding-top:6px}.GenericOutlinesPanel .msg-no-bookmark-outline{margin-top:6px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport { useDragLayer } from 'react-dnd';\nimport { ItemTypes } from 'constants/dnd';\n\nconst layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 99999,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%'\n};\n\nconst getItemStyles = (initialOffset, currentOffset) => {\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n  const { x, y } = currentOffset;\n  const transform = `translate(calc(${x}px - 50%), calc(${y}px - 100%))`;\n  return {\n    transform,\n    WebkitTransform: transform,\n  };\n};\n\nexport const OutlinesDragLayer = () => {\n  const {\n    itemType,\n    item,\n    isDragging,\n    initialOffset,\n    currentOffset\n  } = useDragLayer((dragLayerState) => ({\n    itemType: dragLayerState.getItemType(),\n    item: dragLayerState.getItem(),\n    isDragging: dragLayerState.isDragging(),\n    initialOffset: dragLayerState.getInitialSourceClientOffset(),\n    currentOffset: dragLayerState.getClientOffset(),\n  }));\n\n  const renderDragItem = () => {\n    if (!item) {\n      return null;\n    }\n\n    const { dragOutline } = item;\n\n    switch (itemType) {\n      case ItemTypes.OUTLINE:\n        return (\n          <>\n            {dragOutline.getName()}\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return (\n    <div style={layerStyles}>\n      <div\n        className=\"bookmark-outline-single-container preview\"\n        style={getItemStyles(initialOffset, currentOffset)}\n      >\n        {renderDragItem()}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useLayoutEffect, useRef, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { DndProvider } from 'react-dnd';\nimport { isMobileDevice } from 'helpers/device';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport TouchBackEnd from 'react-dnd-touch-backend';\nimport OutlineControls from '../../OutlineControls';\nimport Outline from 'components/Outline';\nimport OutlineContext from 'components/Outline/Context';\nimport Button from 'components/Button';\nimport OutlineContent from 'src/components/OutlineContent';\nimport DataElementWrapper from 'components/DataElementWrapper';\n\nimport core from 'core';\nimport outlineUtils from 'helpers/OutlineUtils';\nimport DataElements from 'constants/dataElement';\nimport defaultTool from 'constants/defaultTool';\nimport actions from 'actions';\nimport selectors from 'selectors';\n\nimport '../../../constants/bookmarksOutlinesShared.scss';\nimport './GenericOutlinesPanel.scss';\nimport { OutlinesDragLayer } from './OutlinesDragLayer';\n\nconst GenericOutlinesPanel = () => {\n  const [\n    isDisabled,\n    outlines,\n    outlineControlVisibility,\n    outlineEditingEnabled,\n    shouldAutoExpandOutlines,\n    currentPage,\n    pageLabels,\n  ] = useSelector(\n    (state) => [\n      selectors.isElementDisabled(state, 'outlines-panel'),\n      selectors.getOutlines(state),\n      selectors.isOutlineControlVisible(state),\n      selectors.getOutlineEditingEnabled(state),\n      selectors.shouldAutoExpandOutlines(state),\n      selectors.getCurrentPage(state),\n      selectors.getPageLabels(state),\n    ],\n    shallowEqual,\n  );\n\n  const defaultDestText = 'Full Page';\n  const areaDestinationText = 'Area Selection';\n  const defaultDestCoord = { x: 0, y: 0 };\n\n  const [currentDestText, setCurrentDestText] = useState(defaultDestText);\n  const [currentDestCoord, setCurrentDestCoord] = useState(defaultDestCoord);\n  const [currentDestPage, setCurrentDestPage] = useState(currentPage);\n  const [isOutlineEditable, setOutlineEditable] = useState(false);\n  const [activeOutlinePath, setActiveOutlinePath] = useState(null);\n  const [isAddingNewOutline, setAddingNewOutline] = useState(false);\n  const [editingOutlines, setEditingOutlines] = useState({});\n  const [isAnyOutlineRenaming, setAnyOutlineRenaming] = useState(false);\n  const [isMultiSelectMode, setMultiSelectMode] = useState(false);\n  const [selectedOutlines, setSelectedOutlines] = useState([]);\n\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n  const nextPathRef = useRef(null);\n  const TOOL_NAME = 'OutlineDestinationCreateTool';\n  const tool = core.getTool(TOOL_NAME);\n\n  useLayoutEffect(() => {\n    setAddingNewOutline(false);\n\n    if (nextPathRef.current !== null) {\n      setActiveOutlinePath(nextPathRef.current);\n      nextPathRef.current = null;\n    }\n\n    const shouldResetMultiSelectedMode = outlines.length === 0;\n    if (shouldResetMultiSelectedMode) {\n      setMultiSelectMode(false);\n    }\n  }, [outlines]);\n\n  useEffect(() => {\n    setOutlineEditable(core.isFullPDFEnabled() && outlineEditingEnabled);\n  }, [outlineEditingEnabled]);\n\n  useEffect(() => {\n    const isAnyEditing = Object.values(editingOutlines).some((value) => value);\n    setAnyOutlineRenaming(isAnyEditing);\n  }, [editingOutlines, outlines]);\n\n  useEffect(() => {\n    const onSetDestination = (annotation) => {\n      setCurrentDestText(annotation['IsText'] ? annotation.getCustomData('trn-annot-preview') : areaDestinationText);\n      setCurrentDestCoord({ x: annotation['X'], y: annotation['Y'] });\n      setCurrentDestPage(annotation['PageNumber']);\n    };\n\n    const onOutlinesBookmarksChanged = () => {\n      core.getOutlines((outlines) => {\n        dispatch(actions.setOutlines(outlines));\n      });\n    };\n\n    const onDocumentLoaded = () => {\n      setActiveOutlinePath(null);\n    };\n\n    core.addEventListener('outlineSetDestination', onSetDestination);\n    window.addEventListener('outlineBookmarksChanged', onOutlinesBookmarksChanged);\n    core.addEventListener('documentLoaded', onDocumentLoaded);\n    return () => {\n      core.removeEventListener('outlineSetDestination', onSetDestination);\n      window.removeEventListener('outlineBookmarksChanged', onOutlinesBookmarksChanged);\n      core.removeEventListener('documentLoaded', onDocumentLoaded);\n    };\n  }, []);\n\n  const getCurrentDestViewerCoord = (pageNum, { x, y }) => {\n    const docViewer = core.getDocumentViewer().getDocument();\n    // convert annotation coordinates to viewerCoordinates because PDFNet used PDF coordinates\n    return docViewer.getViewerCoordinates(pageNum, x, y);\n  };\n\n  const addNewOutline = async (name) => {\n    const { x, y } = getCurrentDestViewerCoord(currentDestPage, currentDestCoord);\n    let nextPath;\n    let outlineName = name;\n    if (![defaultDestText, areaDestinationText].includes(currentDestText) && !name) {\n      outlineName = currentDestText.slice(0, 40);\n    } else if (!name) {\n      outlineName = t('message.untitled');\n    }\n    if (outlines.length === 0) {\n      nextPath = await outlineUtils.addRootOutline(outlineName, currentDestPage, x, y, 0);\n    } else {\n      nextPath = await outlineUtils.addNewOutline(outlineName, activeOutlinePath, currentDestPage, x, y, 0);\n    }\n\n    nextPathRef.current = nextPath;\n    updateOutlines();\n  };\n\n  const updateOutlines = () => {\n    core.getOutlines((outlines) => {\n      dispatch(actions.setOutlines(outlines));\n    });\n\n    clearOutlineDestination();\n    setEditingOutlines({});\n  };\n\n  const getPath = (outline) => {\n    return outlineUtils.getPath(outline);\n  };\n\n  const clearOutlineDestination = () => {\n    core.setToolMode(defaultTool);\n    setCurrentDestText(defaultDestText);\n    setCurrentDestCoord(defaultDestCoord);\n    setCurrentDestPage(currentPage);\n    tool.clearOutlineDestination();\n  };\n\n  const updateOutlineDest = async (outlinePath) => {\n    const { x, y } = getCurrentDestViewerCoord(currentDestPage, currentDestCoord);\n    await outlineUtils.setOutlineDestination(outlinePath, currentDestPage, x, y, 0);\n    nextPathRef.current = outlinePath;\n    updateOutlines();\n  };\n\n  useEffect(() => {\n    if (currentDestText === defaultDestText) {\n      setCurrentDestPage(currentPage);\n    }\n  }, [currentDestText, currentPage]);\n\n  useEffect(() => {\n    if (isAddingNewOutline) {\n      core.setToolMode(TOOL_NAME);\n    } else {\n      clearOutlineDestination();\n    }\n  }, [isAddingNewOutline]);\n\n  const generalMoveOutlineAction = (dragOutline, dropOutline, moveDirection) => {\n    const dragPath = getPath(dragOutline);\n    const dropPath = getPath(dropOutline);\n    setSelectedOutlines([]);\n\n    moveDirection.call(outlineUtils, dragPath, dropPath).then((path) => {\n      updateOutlines();\n      nextPathRef.current = path;\n    });\n    core.goToOutline(dragOutline);\n  };\n\n  const moveOutlineAfterTarget = (dragOutline, dropOutline) => {\n    generalMoveOutlineAction(dragOutline, dropOutline, outlineUtils.moveOutlineAfterTarget);\n  };\n\n  const moveOutlineBeforeTarget = (dragOutline, dropOutline) => {\n    generalMoveOutlineAction(dragOutline, dropOutline, outlineUtils.moveOutlineBeforeTarget);\n  };\n\n  const moveOutlineInward = (dragOutline, dropOutline) => {\n    generalMoveOutlineAction(dragOutline, dropOutline, outlineUtils.moveOutlineInTarget);\n  };\n\n  const renameOutline = async (outlinePath, newName) => {\n    await outlineUtils.setOutlineName(outlinePath, newName);\n    updateOutlines();\n  };\n\n  const removeOutlines = async (outlinesToRemove) => {\n    outlinesToRemove.sort().reverse();\n    const confirmationWarning = {\n      message: t('warning.deleteOutline.message'),\n      title: t('warning.deleteOutline.title'),\n      confirmBtnText: t('action.delete'),\n      onConfirm: async () => {\n        for (let i = 0; i < outlinesToRemove.length; i++) {\n          const fullIndex = outlinesToRemove[i];\n          await outlineUtils.deleteOutline(fullIndex);\n        }\n        updateOutlines();\n        setActiveOutlinePath(null);\n        setSelectedOutlines([]);\n      },\n    };\n    dispatch(actions.showWarningMessage(confirmationWarning));\n  };\n\n  if (isDisabled) {\n    return null;\n  }\n\n  return (\n    <div className=\"Panel GenericOutlinesPanel bookmark-outline-panel\">\n      <div className=\"bookmark-outline-panel-header\">\n        <div className=\"header-title\">{t('component.outlinesPanel')}</div>\n        {isOutlineEditable &&\n          (isMultiSelectMode ? (\n            <Button\n              className=\"bookmark-outline-control-button\"\n              dataElement={DataElements.OUTLINE_MULTI_SELECT}\n              label={t('option.bookmarkOutlineControls.done')}\n              disabled={isAddingNewOutline}\n              onClick={() => setMultiSelectMode(false)}\n            />\n          ) : (\n            <Button\n              className=\"bookmark-outline-control-button\"\n              dataElement={DataElements.OUTLINE_MULTI_SELECT}\n              label={t('action.edit')}\n              disabled={isAddingNewOutline || outlines.length === 0}\n              onClick={() => {\n                setMultiSelectMode(true);\n                setSelectedOutlines([]);\n              }}\n            />\n          ))}\n      </div>\n      <OutlineContext.Provider\n        value={{\n          currentDestPage: pageLabels[currentDestPage - 1],\n          currentDestText,\n          setActiveOutlinePath,\n          activeOutlinePath,\n          isOutlineActive: (outline) => getPath(outline) === activeOutlinePath,\n          setAddingNewOutline,\n          isAddingNewOutline,\n          setEditingOutlines,\n          editingOutlines,\n          selectedOutlines,\n          isAnyOutlineRenaming,\n          isMultiSelectMode,\n          shouldAutoExpandOutlines,\n          isOutlineEditable,\n          addNewOutline,\n          updateOutlines,\n          renameOutline,\n          updateOutlineDest,\n          removeOutlines,\n        }}\n      >\n        {outlineControlVisibility && <OutlineControls />}\n        <DndProvider backend={isMobileDevice ? TouchBackEnd : HTML5Backend}>\n          <OutlinesDragLayer />\n\n          <div className=\"bookmark-outline-row\">\n            {!isAddingNewOutline && outlines.length === 0 && (\n              <div className=\"msg msg-no-bookmark-outline\">{t('message.noOutlines')}</div>\n            )}\n            {outlines.map((outline) => (\n              <Outline\n                key={outlineUtils.getOutlineId(outline)}\n                outline={outline}\n                setMultiSelected={(path, value) => {\n                  if (selectedOutlines.find((outline) => outline === path)) {\n                    if (!value) {\n                      setSelectedOutlines(selectedOutlines.filter((outline) => outline !== path));\n                    }\n                  } else {\n                    if (value) {\n                      setSelectedOutlines([...selectedOutlines, path]);\n                    }\n                  }\n                }}\n                moveOutlineInward={moveOutlineInward}\n                moveOutlineBeforeTarget={moveOutlineBeforeTarget}\n                moveOutlineAfterTarget={moveOutlineAfterTarget}\n              />\n            ))}\n            {isAddingNewOutline && activeOutlinePath === null && (\n              <DataElementWrapper className=\"bookmark-outline-single-container editing\">\n                <OutlineContent isAdding={true} text={''} onCancel={() => setAddingNewOutline(false)} />\n              </DataElementWrapper>\n            )}\n          </div>\n        </DndProvider>\n\n        {isOutlineEditable && (\n          <DataElementWrapper\n            className=\"bookmark-outline-footer\"\n            dataElement={DataElements.OUTLINE_ADD_NEW_BUTTON_CONTAINER}\n          >\n            {isMultiSelectMode ? (\n              <>\n                <Button\n                  className=\"multi-selection-button\"\n                  img=\"icon-menu-add\"\n                  disabled={selectedOutlines.length > 0 || isAddingNewOutline}\n                  onClick={() => setAddingNewOutline(true)}\n                />\n                <Button\n                  className=\"multi-selection-button\"\n                  img=\"icon-delete-line\"\n                  disabled={selectedOutlines.length === 0}\n                  onClick={() => removeOutlines(selectedOutlines)}\n                />\n              </>\n            ) : (\n              <Button\n                className=\"bookmark-outline-control-button add-new-button\"\n                img=\"icon-menu-add\"\n                dataElement={DataElements.OUTLINE_ADD_NEW_BUTTON}\n                disabled={isAddingNewOutline}\n                label={`${t('action.add')} ${t('component.outlinePanel')}`}\n                onClick={() => setAddingNewOutline(true)}\n              />\n            )}\n          </DataElementWrapper>\n        )}\n      </OutlineContext.Provider>\n    </div>\n  );\n};\n\nexport default React.memo(GenericOutlinesPanel);\n","import GenericOutlinesPanel from './GenericOutlinesPanel';\n\nexport default GenericOutlinesPanel;\n"],"sourceRoot":""}